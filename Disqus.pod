=head1  Disqus Data Model

There are four types of Disqus Objects each with a corresponding Perl object:

=head2 Posts -- L<Net::Disqus::Post>

  Any comment written by a Disqus User. Each post belongs to a thread.

=head2 Threads -- L<Net::Disqus::Thread>

  A collection of Posts about a certian topic (A specific blog post for example).
  Each Thread Belongs to a Forum.

=head2 Forums -- L<Net::Disqus::Forum>

  A single website which uses Disqus.

  For example: Your blog would be a Forum. Each post on your blog would have an associated Thread made up of Posts.

=head2 Author -- L<Net::Disqus::Forum>

  An Author which has written a post. There are two types of authors:

=over 2

=item * An authenticated author

=item * An anonymous author

=back

=head1  Disqus API Keys


There are two types of API keys:

=head2 User API Key

Unique to each Disqus account.
If a user is logged in they can find their C<user_api_key> by visiting L<http://disqus.com/api/get_my_key/>. You need to keep this key safe.

=head2 Forum API Key

Each Forum(site) has a C<forum_api_key>. The creator of a forum can get their key using the C<get_forum_api_key> method call. This should be stored in a config file which is well protected.

=head1  API Methods

=head2 C<create_post>

=over 2

=item * Method -- POST

=item * Key -- Forum Key

=back

=head3 Arguments

=over 2

=item * Required

=over 4

=item * C<thread_id> -- The ID of the thread to create the post on.

=item * C<message> -- The message of the post.

=item * C<author_name> -- The creator's name.

=item * C<author_email> -- The creator's email address.

=back

=item * Optional

=over 4

=item * C<parent_post> -- The ID of the parent post, for threaded comments.

=item * C<created_at> -- The time the post was created. in format: %Y-%m-%dT%H:%M. If ommited the current time will be used

=item * C<author_url> -- The author's homepage

=item * C<ip_address> -- The author's IP address

=back

=back

=head3 Returns

On success, the L<Net::Disqus::Post> object just created.

=head2 C<get_forum_list>

=over 2

=item * Method -- GET

=item * Key -- The user's C<user_api_key>

=back

=head3 Arguments

None

=head3 Returns

A list of L<Net::Disqus::Forum objects> the user owns.

=head2 C<get_forum_api_key>

=over 2

=item * Method -- GET

=item * Key -- The user's C<user_api_key>

=back

=head3 Arguments

=over 2

=item * Required

=over 4

=item * C<forum_id> -- The ID of the forum being requested.

=back

=back

=head3 Returns

a string containing the forum key.

=head2 C<get_thread_list>

=over 2

=item * Method -- GET

=item * Key -- Forum Key

=item * Key -- The user's C<user_api_key>

=back

=head3 Arguments

None

=head3 Returns

A list of L<Net::Disqus::Thread> objects belonging to the given forum.

=head2 C<get_num_posts>

=over 2

=item * Method -- GET

=item * Key -- Forum Key

=item * Key -- The user's C<user_api_key>

=back

=head3 Arguments

=over 2

=item * Required

=over 4

=item * C<thread_ids> -- A comma delimited list of thread IDs belonging to the forum.

=back

=back

=head3 Returns

An pseudo object mapping each C<thread_id> to two numbers: visible comments, total comments.

=head2 C<get_thread_by_url>

=over 2

=item * Method -- GET

=item * Key -- Forum Key

=item * Key -- The user's C<user_api_key>

=back

=head3 Arguments

=over 2

=item * Required

=over 4

=item * C<url> -- The url to check for a thread. --TODO discover if URI encoded or not.

=back

=back

=head3 Returns

=over 2

=item * On Success -- A L<Net::Disqus::Thread> object.

=item * On Failure -- NULL

=back

=head2 C<get_thread_posts>

=over 2

=item * Method -- GET

=item * Key -- Forum Key

=item * Key -- The user's C<user_api_key>

=back

=head3 Arguments

=over 2

=item * Required

=over 4

=item * C<thread_id> -- The ID of the thread for which you are requesting the posts.

=back

=back

=head3 Returns

A list of L<Net::Disqus::Post> objects for the given thread/forum.

=head2 C<thread_by_identifier>

=over 2

=item * Method -- POST

=item * Key -- Forum Key

=item * Key -- The user's C<user_api_key>

=back

=head3 Arguments

=over 2

=item * Required

=over 4

=item * C<title> -- The title of the thread to possibly be created

=item * C<identifier> -- A string of your choosing

=back

=back

=head3 Returns

An pseudo object with two keys:

=over 2

=item * C<thread> -- The Net::Disqus::Thread object corresponding to the identifier

=item * C<created> -- A boolean which indicates whether the thread was created as a result of this method call. If created, it will have the specified title.

=back

=head2 C<update_thread>

=over 2

=item * Method -- POST

=item * Key -- Forum Key

=item * Key -- The user's C<user_api_key>

=back

=head3 Arguments

=over 2

=item * Required

=over 4

=item * C<thread_id> -- The title of the thread to possibly be created

=back

=item * Optional -- Any of:

=over 4

=item * C<title> -- update the title attribute of the thread

=item * C<slug> -- update the slug attribute of the thread

=item * C<url> -- update the url attribute of the thread

=item * C<allow_comments> -- update the allow_comments attribute of the thread

=back

=back

=head1 Object Definitions

=head2 Posts -- L<Net::Disqus::Post>

=head3 Attributes

=over 2

=item * C<id> a unique alphanumeric string identifying this Post object.

=item * C<forum> the id for the forum this post belongs to.

=item * C<thread> the id for the thread this post belongs to.

=item * C<created_at> the UTC date this post was created, in the format %Y-%m-%dT%H:%M.

=item * C<message> the contents of the post, such as "First post".

=item * C<parent_post> the id of the parent post, if any

=item * C<shown> whether the post is currently visible or not.

=item * C<is_anonymous> whether the comment was left anonymously, as opposed to a registered Disqus account.

=item * C<anonymous_author> present only when is_anonymous is true. A L<Net::Disqus::Author::Anonymous> object.

=item * C<author> present only when is_anonymous is false. An L<Net::Disqus::Author::Athenticated> object.

=back

=head2 Threads -- L<Net::Disqus::Thread>

=head3 Attributes

=over 2

=item * C<id> a unique alphanumeric string identifying this Thread object.

=item * C<forum> the id for the forum this thread belongs to.

=item * C<slug> the per-forum-unique string used for identifying this thread in disqus.com URLs relating to this thread. Composed of underscore-separated alphanumeric strings.

=item * C<title> the title of the thread.

=item * C<created_at> the UTC date this thread was created, in the format %Y-%m-%dT%H:%M.

=item * C<allow_comments> whether this thread is open to new comments.

=item * C<url> the URL this thread is on, if known.

=item * C<identifier> the user-provided identifier for this thread, as in thread_by_identifier above (if available)

=back

=head2 Forums -- L<Net::Disqus::Forum>

=head3 Attributes

=over 2

=item * C<id> a unique alphanumeric string identifying this Forum object.

=item * C<shortname> the unique string used in disqus.com URLs relating to this forum. For example, if the shortname is "bmb", the forum's community page is at http://bmb.disqus.com/.

=item * C<name> a string for displaying the forum's full title, like "The Eyeball Kid's Blog".

=back


=head2 Anonymous Author -- L<Net::Disqus::Author>

=head3 Attributes

=over 2

=item * C<name> the display name of the commenter

=item * C<url> their optionally provided homepage

=item * C<email_hash> md5 of the author's email address

=back

=head2 Authenticated Author -- L<Net::Disqus::Author::Authenticated>

Extends L<Net::Disqus::Author>

=head3 Attributes

=over 2

=item * C<id> the unique id of the commenter's Disqus account

=item * C<username> the author's username

=item * C<display_name> the author's full name, if provided

=item * C<url> their optionally provided homepage

=item * C<email_hash> md5 of the author's email address

=item * C<has_avatar> whether the user has an avatar on disqus.com

=back
